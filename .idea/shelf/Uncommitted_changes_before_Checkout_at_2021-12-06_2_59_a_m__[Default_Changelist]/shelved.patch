Index: app/src/main/java/cmpt276/phosphorus/childapp/breathe/BreatheActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cmpt276.phosphorus.childapp.breathe;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.cepheuen.elegantnumberbutton.view.ElegantNumberButton;\r\n\r\nimport java.util.Objects;\r\n\r\nimport cmpt276.phosphorus.childapp.R;\r\nimport cmpt276.phosphorus.childapp.breathe.utils.BreatheState;\r\nimport cmpt276.phosphorus.childapp.breathe.utils.ConfigureState;\r\nimport cmpt276.phosphorus.childapp.breathe.utils.ExhaleState;\r\nimport cmpt276.phosphorus.childapp.breathe.utils.IdleState;\r\nimport cmpt276.phosphorus.childapp.breathe.utils.InhaleState;\r\n\r\npublic class BreatheActivity extends AppCompatActivity {\r\n    private final BreatheState inhaleState = new InhaleState(this);\r\n    private final BreatheState exhaleState = new ExhaleState(this);\r\n    private final BreatheState configureState = new ConfigureState(this);\r\n    private BreatheState currentState = new IdleState(this);\r\n\r\n    private ImageView circleImgView;\r\n    private TextView remainBreathsText;\r\n    private boolean isInitialized = false;\r\n\r\n    private int remainingBreaths;\r\n    private int chosenBreaths;\r\n    private final String APP_PREFS = \"ParentApp\";\r\n    private final String NUM_CHOSEN_BREATHS = \"NumChosenBreaths - BreatheActivity.java\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_breathe);\r\n\r\n        this.setTitle(getString(R.string.activity_breathe_title));\r\n        Objects.requireNonNull(getSupportActionBar()).setDisplayHomeAsUpEnabled(true);\r\n\r\n        this.getChosenBreathsFromPrefs();\r\n        this.setUpNumBreathsBtn();\r\n        this.setUpViewVisibility();\r\n        this.setUpMainBreatheBtn();\r\n        setState(inhaleState);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        finish();\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    @Override\r\n    protected void onRestart() {\r\n        super.onRestart();\r\n\r\n        // copied from https://stackoverflow.com/questions/2486934/programmatically-relaunch-recreate-an-activity\r\n        // fixes bug when running animation during exhale state, and switching applications and back, will cause\r\n        // bug with the buttons and states when trying to reenter the state\r\n        startActivity(getIntent());\r\n        finish();\r\n        overridePendingTransition(0, 0);\r\n    }\r\n\r\n    public void setState(BreatheState newState) {\r\n        currentState.handleExit();\r\n        currentState = newState;\r\n        currentState.handleEnter();\r\n    }\r\n\r\n    // https://androidexample365.com/a-simple-android-library-to-implement-a-number-counter-with-increment/\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void setUpNumBreathsBtn() {\r\n        TextView numBreathsDisplayed = findViewById(R.id.numBreathesChosen);\r\n        numBreathsDisplayed.setText(getString(\r\n                (chosenBreaths == 1) ? R.string.singular_breath_chosen_text\r\n                : R.string.num_breaths_chosen_text,\r\n                chosenBreaths));\r\n\r\n        ElegantNumberButton btn = findViewById(R.id.elegantNumberButton);\r\n        btn.setNumber(String.valueOf(chosenBreaths));\r\n        btn.setOnClickListener((ElegantNumberButton.OnClickListener) view -> {\r\n            chosenBreaths = Integer.parseInt(btn.getNumber());\r\n            numBreathsDisplayed.setText(getString(\r\n                    (chosenBreaths == 1) ? R.string.singular_breath_chosen_text\r\n                            : R.string.num_breaths_chosen_text,\r\n                    chosenBreaths));\r\n\r\n            remainingBreaths = chosenBreaths;\r\n            saveChosenBreathsToPrefs();\r\n        });\r\n    }\r\n\r\n    private void setUpViewVisibility() {\r\n        circleImgView = findViewById(R.id.circleBreatheAnimation);\r\n        remainBreathsText = findViewById(R.id.remainingBreathesText);\r\n        circleImgView.setVisibility(View.INVISIBLE);\r\n        remainBreathsText.setVisibility(View.INVISIBLE);\r\n    }\r\n\r\n    @SuppressLint({\"ClickableViewAccessibility\", \"SetTextI18n\"})\r\n    private void setUpMainBreatheBtn() {\r\n        Button btnBreatheState = findViewById(R.id.btnBreatheState);\r\n        btnBreatheState.setText(getResources().getString(R.string.initial_state_btn_text));\r\n\r\n        // https://stackoverflow.com/questions/49972106/android-button-ontouch-if-return-true-has-no-click-animation-effect-if-retu\r\n        // https://stackoverflow.com/questions/11690504/how-to-use-view-ontouchlistener-instead-of-onclick\r\n        btnBreatheState.setOnTouchListener((v, event) -> {\r\n\r\n            if (!isInitialized) {\r\n                findViewById(R.id.numBreathesLinearLayout).setVisibility(View.GONE);\r\n                circleImgView.setVisibility(View.VISIBLE);\r\n                remainBreathsText.setVisibility(View.VISIBLE);\r\n                remainBreathsText.setText(getString(R.string.remaining_breaths_text) + chosenBreaths);\r\n                isInitialized = true;\r\n            }\r\n\r\n            if (event.getAction() == MotionEvent.ACTION_DOWN) {\r\n                currentState.handleOnTouch();\r\n            } else if (event.getAction() == MotionEvent.ACTION_UP) {\r\n                currentState.handleOnRelease();\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    public static Intent makeIntent(Context context) {\r\n        return new Intent(context, BreatheActivity.class);\r\n    }\r\n\r\n    public int getRemainingBreaths() {\r\n        return remainingBreaths;\r\n    }\r\n\r\n    public void setRemainingBreaths(int remainingBreathes) {\r\n        this.remainingBreaths = remainingBreathes;\r\n    }\r\n\r\n    public BreatheState getInhaleState() {\r\n        return inhaleState;\r\n    }\r\n\r\n    public BreatheState getExhaleState() {\r\n        return exhaleState;\r\n    }\r\n\r\n    public ImageView getCircleAnimationView() {\r\n        return circleImgView;\r\n    }\r\n\r\n    private void saveChosenBreathsToPrefs() {\r\n        SharedPreferences numBreathesPrefs = this.getSharedPreferences(APP_PREFS, MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = numBreathesPrefs.edit();\r\n        editor.putInt(NUM_CHOSEN_BREATHS, chosenBreaths);\r\n        editor.apply();\r\n    }\r\n\r\n    private void getChosenBreathsFromPrefs() {\r\n        SharedPreferences numBreathesPrefs = this.getSharedPreferences(APP_PREFS, MODE_PRIVATE);\r\n        chosenBreaths = numBreathesPrefs.getInt(NUM_CHOSEN_BREATHS, 1);\r\n        remainingBreaths = chosenBreaths;\r\n    }\r\n\r\n    public TextView getRemainBreathsView() {\r\n        return remainBreathsText;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/BreatheActivity.java b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/BreatheActivity.java
--- a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/BreatheActivity.java	(revision f3a8a2cc16c7660305de969b0a812f84cfb31550)
+++ b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/BreatheActivity.java	(date 1638788237574)
@@ -2,11 +2,14 @@
 
 import androidx.appcompat.app.AppCompatActivity;
 
+import android.animation.AnimatorSet;
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.os.CountDownTimer;
+import android.os.Handler;
 import android.view.MenuItem;
 import android.view.MotionEvent;
 import android.view.View;
@@ -40,6 +43,23 @@
     private final String APP_PREFS = "ParentApp";
     private final String NUM_CHOSEN_BREATHS = "NumChosenBreaths - BreatheActivity.java";
 
+    public final CountDownTimer timer = new CountDownTimer(10000, 100) {
+        @Override
+        public void onTick(long millisUntilFinished) {
+
+        }
+
+        @Override
+        public void onFinish() {
+
+        }
+    };
+
+    public final AnimatorSet animationInhale = new AnimatorSet();
+    public final AnimatorSet animationExhale = new AnimatorSet();
+
+    public final android.os.Handler timerHandler = new Handler();
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
Index: app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/ExhaleState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cmpt276.phosphorus.childapp.breathe.utils;\r\n\r\nimport android.animation.ObjectAnimator;\r\nimport android.annotation.SuppressLint;\r\nimport android.os.Handler;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\n\r\nimport androidx.interpolator.view.animation.LinearOutSlowInInterpolator;\r\n\r\nimport cmpt276.phosphorus.childapp.R;\r\nimport cmpt276.phosphorus.childapp.breathe.BreatheActivity;\r\n\r\npublic class ExhaleState extends BreatheState {\r\n    private final Runnable timerRunnableThreeSeconds = this::updateBreathesLeft;\r\n    private final Runnable timerRunnableTenSeconds = () -> {\r\n        // TODO (jack) - stop sound\r\n        stopAnimation();\r\n    };\r\n\r\n    public ExhaleState(BreatheActivity context) {\r\n        super(context);\r\n    }\r\n\r\n    @Override\r\n    public void handleEnter() {\r\n        super.handleEnter();\r\n\r\n        // TODO (jack) - play mc sound {0:10-0:20}\r\n        // TODO (jack) - update guide text\r\n\r\n        // disable button to be touched\r\n        Button btnBreatheState = context.findViewById(R.id.btnBreatheState);\r\n        btnBreatheState.setEnabled(false);\r\n\r\n        timerHandler.postDelayed(timerRunnableThreeSeconds, THREE_SECONDS);\r\n        timerHandler.postDelayed(timerRunnableTenSeconds, TEN_SECONDS);\r\n\r\n        stopAnimation();\r\n\r\n        startExhaleAnimation();\r\n    }\r\n\r\n    @Override\r\n    public void handleExit() {\r\n        super.handleExit();\r\n        timerHandler.removeCallbacks(timerRunnableThreeSeconds);\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void updateBreathesLeft() {\r\n        Button btnBreatheState = context.findViewById(R.id.btnBreatheState);\r\n        btnBreatheState.setEnabled(true);\r\n\r\n        context.setRemainingBreaths(context.getRemainingBreaths() - 1);\r\n        context.getRemainBreathsView().setText(\r\n                context.getString(R.string.remaining_breaths_text)\r\n                        + context.getRemainingBreaths());\r\n\r\n        if (context.getRemainingBreaths() > 0) {\r\n\r\n            // TODO (jack) - update guide text\r\n            btnBreatheState.setText(R.string.breathe_state_in);\r\n            context.setState(context.getInhaleState());\r\n        } else {\r\n            // TODO (jack) - update guide text\r\n\r\n            btnBreatheState.setText(R.string.breathe_state_finished);\r\n            btnBreatheState.setOnClickListener(view -> {\r\n                stopAnimation();\r\n                context.finish();\r\n            });\r\n        }\r\n    }\r\n\r\n    private void startExhaleAnimation(){\r\n        //https://stackoverflow.com/questions/33916287/android-scale-image-view-with-animation/33916973\r\n        ObjectAnimator scaleDownX = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_X, 1f);\r\n        ObjectAnimator scaleDownY = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_Y, 1f);\r\n\r\n        final long animationDuration = TEN_SECONDS*(long)2.5;\r\n        scaleDownX.setDuration(animationDuration);\r\n        scaleDownY.setDuration(animationDuration);\r\n\r\n        animation.play(scaleDownX).with(scaleDownY);\r\n        animation.setInterpolator(new LinearOutSlowInInterpolator());\r\n        context.getCircleAnimationView().setColorFilter(context.getColor(R.color.chalk_red_var));\r\n\r\n        animation.start();\r\n    }\r\n\r\n    private void stopAnimation(){\r\n        animation.cancel();\r\n        animation.end();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/ExhaleState.java b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/ExhaleState.java
--- a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/ExhaleState.java	(revision f3a8a2cc16c7660305de969b0a812f84cfb31550)
+++ b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/ExhaleState.java	(date 1638788237560)
@@ -2,7 +2,6 @@
 
 import android.animation.ObjectAnimator;
 import android.annotation.SuppressLint;
-import android.os.Handler;
 import android.view.ViewGroup;
 import android.widget.Button;
 
@@ -13,10 +12,8 @@
 
 public class ExhaleState extends BreatheState {
     private final Runnable timerRunnableThreeSeconds = this::updateBreathesLeft;
-    private final Runnable timerRunnableTenSeconds = () -> {
-        // TODO (jack) - stop sound
-        stopAnimation();
-    };
+    // TODO (jack) - stop sound
+    private final Runnable timerRunnableTenSeconds = this::stopAnimationExhale;
 
     public ExhaleState(BreatheActivity context) {
         super(context);
@@ -33,10 +30,10 @@
         Button btnBreatheState = context.findViewById(R.id.btnBreatheState);
         btnBreatheState.setEnabled(false);
 
-        timerHandler.postDelayed(timerRunnableThreeSeconds, THREE_SECONDS);
-        timerHandler.postDelayed(timerRunnableTenSeconds, TEN_SECONDS);
+        context.timerHandler.postDelayed(timerRunnableThreeSeconds, THREE_SECONDS);
+        context.timerHandler.postDelayed(timerRunnableTenSeconds, TEN_SECONDS);
 
-        stopAnimation();
+        stopAnimationExhale();
 
         startExhaleAnimation();
     }
@@ -44,7 +41,7 @@
     @Override
     public void handleExit() {
         super.handleExit();
-        timerHandler.removeCallbacks(timerRunnableThreeSeconds);
+        context.timerHandler.removeCallbacks(timerRunnableThreeSeconds);
     }
 
     @SuppressLint("SetTextI18n")
@@ -67,7 +64,7 @@
 
             btnBreatheState.setText(R.string.breathe_state_finished);
             btnBreatheState.setOnClickListener(view -> {
-                stopAnimation();
+                stopAnimationExhale();
                 context.finish();
             });
         }
@@ -82,15 +79,15 @@
         scaleDownX.setDuration(animationDuration);
         scaleDownY.setDuration(animationDuration);
 
-        animation.play(scaleDownX).with(scaleDownY);
-        animation.setInterpolator(new LinearOutSlowInInterpolator());
+        context.animationExhale.play(scaleDownX).with(scaleDownY);
+        context.animationExhale.setInterpolator(new LinearOutSlowInInterpolator());
         context.getCircleAnimationView().setColorFilter(context.getColor(R.color.chalk_red_var));
 
-        animation.start();
+        context.animationExhale.start();
     }
 
-    private void stopAnimation(){
-        animation.cancel();
-        animation.end();
+    private void stopAnimationExhale(){
+        context.animationExhale.cancel();
+        context.animationExhale.end();
     }
 }
Index: app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/BreatheState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cmpt276.phosphorus.childapp.breathe.utils;\r\n\r\nimport android.animation.AnimatorSet;\r\nimport android.os.Handler;\r\n\r\nimport cmpt276.phosphorus.childapp.breathe.BreatheActivity;\r\n\r\npublic abstract class BreatheState {\r\n    protected BreatheActivity context;\r\n\r\n    protected boolean hasHeldThreeSecs = false;\r\n    protected boolean hasHeldTenSecs = false;\r\n\r\n    protected final int THREE_SECONDS = 3000;\r\n    protected final int TEN_SECONDS = 10000;\r\n\r\n    protected final android.os.Handler timerHandler = new Handler();\r\n\r\n    protected final AnimatorSet animation = new AnimatorSet();\r\n\r\n    // Ensure BreatheState holds reference to BreatheActivity\r\n    public BreatheState(BreatheActivity context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public void handleEnter(){}\r\n    public void handleExit(){}\r\n    public void handleOnTouch(){}\r\n    public void handleOnRelease(){}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/BreatheState.java b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/BreatheState.java
--- a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/BreatheState.java	(revision f3a8a2cc16c7660305de969b0a812f84cfb31550)
+++ b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/BreatheState.java	(date 1638788105129)
@@ -9,15 +9,10 @@
     protected BreatheActivity context;
 
     protected boolean hasHeldThreeSecs = false;
-    protected boolean hasHeldTenSecs = false;
 
     protected final int THREE_SECONDS = 3000;
     protected final int TEN_SECONDS = 10000;
 
-    protected final android.os.Handler timerHandler = new Handler();
-
-    protected final AnimatorSet animation = new AnimatorSet();
-
     // Ensure BreatheState holds reference to BreatheActivity
     public BreatheState(BreatheActivity context) {
         this.context = context;
Index: app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/InhaleState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cmpt276.phosphorus.childapp.breathe.utils;\r\n\r\nimport android.animation.ObjectAnimator;\r\nimport android.os.Handler;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\n\r\nimport androidx.interpolator.view.animation.LinearOutSlowInInterpolator;\r\n\r\nimport cmpt276.phosphorus.childapp.R;\r\nimport cmpt276.phosphorus.childapp.breathe.BreatheActivity;\r\n\r\npublic class InhaleState extends BreatheState {\r\n    private final Runnable timerRunnableThreeSeconds = this::handleThreeSecsPassed;\r\n    private final Runnable timerRunnableTenSeconds = this::handleTenSecsPassed;\r\n\r\n    public InhaleState(BreatheActivity context) {\r\n        super(context);\r\n    }\r\n\r\n    @Override\r\n    public void handleEnter() {\r\n        super.handleEnter();\r\n        stopAnimation();\r\n    }\r\n\r\n    @Override\r\n    public void handleOnTouch() {\r\n        super.handleOnTouch();\r\n\r\n        // TODO (jack) - set guide text\r\n        Button btnBreatheState = context.findViewById(R.id.btnBreatheState);\r\n        btnBreatheState.setText(R.string.breathe_state_in);\r\n\r\n        // remove the handler running the 10 second runnable from ExhaleState\r\n        // https://stackoverflow.com/questions/5883635/how-to-remove-all-callbacks-from-a-handler\r\n        timerHandler.removeCallbacksAndMessages(null);\r\n\r\n        // set timer for 3 seconds\r\n        timerHandler.postDelayed(timerRunnableThreeSeconds, THREE_SECONDS);\r\n\r\n        // set timer for 10 seconds\r\n        timerHandler.postDelayed(timerRunnableTenSeconds, TEN_SECONDS);\r\n\r\n        // TODO (jack) - 1. stop sound from exhale state (if playing)\r\n        // TODO (jack) - 2. play mc sound for inhale state {0:00 - 0:10}\r\n        startInhaleAnimation();\r\n    }\r\n\r\n    @Override\r\n    public void handleOnRelease() {\r\n        super.handleOnRelease();\r\n        if (hasHeldThreeSecs) {\r\n            context.setState(context.getExhaleState());\r\n        } else {\r\n            // stop the timer\r\n            timerHandler.removeCallbacksAndMessages(null);\r\n            resetAnimation();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void handleExit() {\r\n        super.handleExit();\r\n        timerHandler.removeCallbacksAndMessages(null);\r\n\r\n        hasHeldThreeSecs = false;\r\n        hasHeldTenSecs = false;\r\n\r\n        stopAnimation();\r\n    }\r\n\r\n    private void handleThreeSecsPassed() {\r\n        hasHeldThreeSecs = true;\r\n        Button btnBreatheState = context.findViewById(R.id.btnBreatheState);\r\n        btnBreatheState.setText(R.string.breathe_state_out);\r\n    }\r\n\r\n    private void handleTenSecsPassed() {\r\n        hasHeldTenSecs = true;\r\n        // TODO (jack) - Stop sound for inhale state\r\n\r\n        stopAnimation();\r\n    }\r\n\r\n    private void startInhaleAnimation(){\r\n        //https://stackoverflow.com/questions/33916287/android-scale-image-view-with-animation/33916973\r\n        ObjectAnimator scaleUpX = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_X, 8.5f);\r\n        ObjectAnimator scaleUpY = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_Y, 8.5f);\r\n\r\n        final long animationDuration = TEN_SECONDS*(long)2.5;\r\n        scaleUpX.setDuration(animationDuration);\r\n        scaleUpY.setDuration(animationDuration);\r\n\r\n        animation.play(scaleUpX).with(scaleUpY);\r\n        animation.setInterpolator(new LinearOutSlowInInterpolator());\r\n\r\n        context.getCircleAnimationView().setColorFilter(context.getColor(R.color.chalk_red));\r\n\r\n        animation.start();\r\n    }\r\n\r\n    private void resetAnimation(){\r\n        // https://stackoverflow.com/questions/45629326/trying-to-reset-values-from-property-animator-to-be-used-in-recycler-view/45700580#45700580\r\n        animation.cancel();\r\n        animation.reverse();\r\n        animation.end();\r\n    }\r\n\r\n    private void stopAnimation(){\r\n        animation.cancel();\r\n        animation.end();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/InhaleState.java b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/InhaleState.java
--- a/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/InhaleState.java	(revision f3a8a2cc16c7660305de969b0a812f84cfb31550)
+++ b/app/src/main/java/cmpt276/phosphorus/childapp/breathe/utils/InhaleState.java	(date 1638788237545)
@@ -1,7 +1,6 @@
 package cmpt276.phosphorus.childapp.breathe.utils;
 
 import android.animation.ObjectAnimator;
-import android.os.Handler;
 import android.view.ViewGroup;
 import android.widget.Button;
 
@@ -21,7 +20,7 @@
     @Override
     public void handleEnter() {
         super.handleEnter();
-        stopAnimation();
+//        stopAnimation();
     }
 
     @Override
@@ -34,19 +33,36 @@
 
         // remove the handler running the 10 second runnable from ExhaleState
         // https://stackoverflow.com/questions/5883635/how-to-remove-all-callbacks-from-a-handler
-        timerHandler.removeCallbacksAndMessages(null);
+        context.timerHandler.removeCallbacksAndMessages(null);
 
         // set timer for 3 seconds
-        timerHandler.postDelayed(timerRunnableThreeSeconds, THREE_SECONDS);
+        context.timerHandler.postDelayed(timerRunnableThreeSeconds, THREE_SECONDS);
 
         // set timer for 10 seconds
-        timerHandler.postDelayed(timerRunnableTenSeconds, TEN_SECONDS);
+        context.timerHandler.postDelayed(timerRunnableTenSeconds, TEN_SECONDS);
 
         // TODO (jack) - 1. stop sound from exhale state (if playing)
         // TODO (jack) - 2. play mc sound for inhale state {0:00 - 0:10}
         startInhaleAnimation();
     }
 
+    private void startInhaleAnimation(){
+        //https://stackoverflow.com/questions/33916287/android-scale-image-view-with-animation/33916973
+        ObjectAnimator scaleUpX = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_X, 8.5f);
+        ObjectAnimator scaleUpY = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_Y, 8.5f);
+
+        final long animationDuration = TEN_SECONDS*(long)2.5;
+        scaleUpX.setDuration(animationDuration);
+        scaleUpY.setDuration(animationDuration);
+
+        context.animationInhale.play(scaleUpX).with(scaleUpY);
+        context.animationInhale.setInterpolator(new LinearOutSlowInInterpolator());
+
+        context.getCircleAnimationView().setColorFilter(context.getColor(R.color.chalk_red));
+
+        context.animationInhale.start();
+    }
+
     @Override
     public void handleOnRelease() {
         super.handleOnRelease();
@@ -54,7 +70,7 @@
             context.setState(context.getExhaleState());
         } else {
             // stop the timer
-            timerHandler.removeCallbacksAndMessages(null);
+            context.timerHandler.removeCallbacksAndMessages(null);
             resetAnimation();
         }
     }
@@ -62,12 +78,11 @@
     @Override
     public void handleExit() {
         super.handleExit();
-        timerHandler.removeCallbacksAndMessages(null);
+        context.timerHandler.removeCallbacksAndMessages(null);
 
         hasHeldThreeSecs = false;
-        hasHeldTenSecs = false;
 
-        stopAnimation();
+        stopAnimationInhale();
     }
 
     private void handleThreeSecsPassed() {
@@ -77,39 +92,21 @@
     }
 
     private void handleTenSecsPassed() {
-        hasHeldTenSecs = true;
         // TODO (jack) - Stop sound for inhale state
 
-        stopAnimation();
-    }
-
-    private void startInhaleAnimation(){
-        //https://stackoverflow.com/questions/33916287/android-scale-image-view-with-animation/33916973
-        ObjectAnimator scaleUpX = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_X, 8.5f);
-        ObjectAnimator scaleUpY = ObjectAnimator.ofFloat(context.getCircleAnimationView(), ViewGroup.SCALE_Y, 8.5f);
-
-        final long animationDuration = TEN_SECONDS*(long)2.5;
-        scaleUpX.setDuration(animationDuration);
-        scaleUpY.setDuration(animationDuration);
-
-        animation.play(scaleUpX).with(scaleUpY);
-        animation.setInterpolator(new LinearOutSlowInInterpolator());
-
-        context.getCircleAnimationView().setColorFilter(context.getColor(R.color.chalk_red));
-
-        animation.start();
+        stopAnimationInhale();
     }
 
     private void resetAnimation(){
         // https://stackoverflow.com/questions/45629326/trying-to-reset-values-from-property-animator-to-be-used-in-recycler-view/45700580#45700580
-        animation.cancel();
-        animation.reverse();
-        animation.end();
+        context.animationInhale.cancel();
+        context.animationInhale.reverse();
+        context.animationInhale.end();
     }
 
-    private void stopAnimation(){
-        animation.cancel();
-        animation.end();
+    private void stopAnimationInhale(){
+        context.animationInhale.cancel();
+        context.animationInhale.end();
     }
 
 }
